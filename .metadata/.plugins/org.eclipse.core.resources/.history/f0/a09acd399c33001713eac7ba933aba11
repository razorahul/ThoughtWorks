package rahul.assingment1;

import java.util.HashMap;
import java.util.Map;

import rahul.assingment1.data.IGuide;
import rahul.assingment1.model.Galaxy;
import rahul.assingment1.validators.IValidate;

public class Engine {
	public static String ERROR_MSG = "I have no idea what you are talking about";
	private Galaxy g;

	public Engine(Galaxy g) {
		super();
		this.g = g;
	}

	public String feedData(String line) {
		if (line != null && !line.trim().equalsIgnoreCase("")) {
			// catching equivalent Roman
			String message = ERROR_MSG;
			if (line.trim().matches("^.* is (M|D|C|L|X|V|I)")) {
				String s[] = line.split(" ");
				g.getMapping().put(s[0], s[2].charAt(0));
				message = "Added value of " + s[0] + " as " + s[2].charAt(0);
			} else if (line.trim().endsWith("Credits")) {
				String s[] = line.split(" ");
				String elementName = null;
				StringBuilder sb = new StringBuilder("");
				for (int i = 0; i < s.length - 3; i++) {
					if (g.getMapping().containsKey(s[i])) {
						sb.append(g.getMapping().get(s[i]));
						continue;
					} else
						elementName = s[i];
				}
				Integer f = new Integer(s[s.length - 2]) / IGuide.convert(sb.toString());
				g.getMinerals().put(elementName, f);
				message = "Added mineral " + elementName + " for " + f;
			} else if (line.trim().endsWith("?")) {
				if (line.trim().toLowerCase().startsWith("how much is")) {
					String[] s = line.trim().split(" ");
					StringBuilder literal = new StringBuilder("");
					String actual = line.trim().substring(11, line.trim().length() - 2);
					for (int i = 3; i < s.length - 1; i++) {
						if (g.getMapping().get(s[i]) != null)
							literal.append(g.getMapping().get(s[i]));
						else {
							return message;
						}
					}
					if (IValidate.validate(literal.toString())) {
						message = actual + " is " + IGuide.convert(literal.toString());
					} else
						return message;

				} else if (line.trim().toLowerCase().startsWith("how many credits is")) {
					String s[] = line.trim().split(" ");
					StringBuilder literal = new StringBuilder("");
					String actual = line.trim().substring(19, line.trim().length() - 2);
					int sum = 0;
					for (int i = 4; i < s.length - 1; i++) {
						if (g.getMapping().get(s[i]) != null)
							literal.append(g.getMapping().get(s[i]));
						else
							sum += g.getMinerals().get(s[i]);
					}
					if (IValidate.validate(literal.toString())) {
						message = actual + " is " + (sum + IGuide.convert(literal.toString())) + " Credits";
					} else
						return message;
				}
			}
		}
		return ERROR_MSG;
	}

	public Galaxy getG() {
		return g;
	}

	public void setG(Galaxy g) {
		this.g = g;
	}
}
