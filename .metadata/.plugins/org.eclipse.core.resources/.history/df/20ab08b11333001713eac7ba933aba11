package rahul.assingment1.data;

import java.util.ArrayList;
import java.util.List;

public interface IGuide {
	@SuppressWarnings("serial")
	List<Literal> LITERALS = new ArrayList<Literal>(){{
		add(new Literal(1000,'M'));
		add(new Literal(500,'D'));
		add(new Literal(100,'C'));
		add(new Literal(50,'L'));
		add(new Literal(10,'X'));
		add(new Literal(5,'V'));
		add(new Literal(1,'I'));
	}};
	
	class Literal implements Comparable<Literal>{
		private int value;
		private char symbol;
		
		public Literal(int value, char symbol) {
			super();
			this.value = value;
			this.symbol = Character.toUpperCase(symbol);
		}
		public int getValue() {
			return value;
		}
		public void setValue(int value) {
			this.value = value;
		}
		public char getSymbol() {
			return symbol;
		}
		public void setSymbol(char symbol) {
			this.symbol = Character.toUpperCase(symbol);
		}
		@Override
		public int hashCode() {
			final int prime = 31;
			int result = 1;
			result = prime * result + symbol;
			return result;
		}
		@Override
		public boolean equals(Object obj) {
			if (this == obj)
				return true;
			if (obj == null)
				return false;
			if (getClass() != obj.getClass())
				return false;
			Literal other = (Literal) obj;
			if (symbol != other.symbol)
				return false;
			return true;
		}
		public int compareTo(Literal o) {
			if(null!=o)
				return Integer.compare(this.getValue(), o.getValue());
			return -1;
		}
		
		
	}
	
	public static int convert(String literal){
		if(null!=literal && !literal.trim().equalsIgnoreCase("")){
			if(IValidate.validate(litral)){
				
			}
		}
		return 0;
	}
}

